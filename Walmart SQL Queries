CREATE DATABASE IF NOT EXISTS walmart;

USE walmart;

CREATE TABLE sales(
invoice_id VARCHAR(30) NOT NULL PRIMARY KEY,
branch VARCHAR(5) NOT NULL,
city VARCHAR(30) NOT NULL,
customer_type VARCHAR(30) NOT NULL,
gender VARCHAR(10) NOT NULL,
product_line VARCHAR(100) NOT NULL,
unit_price DECIMAL(10,2) NOT NULL,
quantity INT NOT NULL,
vat FLOAT(6,4) NOT NULL,
total DECIMAL(12, 4) NOT NULL,
date DATETIME NOT NULL,
time TIME NOT NULL,
payment VARCHAR(15) NOT NULL,
cogs DECIMAL(10,2) NOT NULL,
gross_margin_pct FLOAT(11,9),
gross_income DECIMAL(12, 4),
rating FLOAT(2, 1)
);

-- import the data to sales


select * from sales 
limit 10;           -- To check all data is correctly loaded


-------- Feature Engineering ----------

-- Time of day --

SELECT 
    time,
    (CASE
        WHEN `time` BETWEEN '00:00:00' AND '12:00:00' THEN 'Morning'
        WHEN `time` BETWEEN '12:01:00' AND '16:00:00' THEN 'Afternoon'
        ELSE 'Evening'
    END) AS time_of_day
FROM
    sales;

ALTER TABLE sales ADD COLUMN time_of_day VARCHAR(20);

UPDATE sales 
SET 
    time_of_day = (CASE
        WHEN `time` BETWEEN '00:00:00' AND '12:00:00' THEN 'Morning'
        WHEN `time` BETWEEN '12:01:00' AND '16:00:00' THEN 'Afternoon'
        ELSE 'Evening'
    END);


-- Day name --

SELECT 
    date, DAYNAME(date) AS day_name
FROM
    sales;
    
alter table sales
add column Day_name varchar(10);

UPDATE sales 
SET 
    day_name = DAYNAME(DATE);
    
  -- MONTH NAME --
  
SELECT 
    date, MONTHNAME(date) AS month_name
FROM
    sales;
    
Alter table sales 
Add column Month_name varchar(10);

UPDATE sales 
SET 
    Month_name = MONTHNAME(date);

----------------------------------------------------------------------------------------------------------------------

--------- General Analysis --------

-- Q1  What are the total transactions, total revenue, and average revenue per transaction?
  
 SELECT 
    COUNT(*) AS Total_transactions,
    SUM(total) AS Total_revenue,
    AVG(total) AS Avg_revenue
FROM
    sales;
    
-- Q2: What are the sales statistics for each branch?

SELECT 
    COUNT(*) AS Total_transactions,
    SUM(total) AS Total_revenue,
    AVG(total) AS Avg_revenue
FROM
    sales
GROUP BY branch
ORDER BY Total_revenue;


-- Q3: How many transactions occurred in each city?

SELECT 
    city, COUNT(*) AS Total_transactions
FROM
    sales
GROUP BY city
ORDER BY Total_transactions;


--------- Product Analysis ---------

-- Q4: What is the total revenue generated by each product line?

SELECT 
    product_line, SUM(total) AS Total_revenue
FROM
    sales
GROUP BY product_line
ORDER BY Total_revenue desc;


-- Q5: What is the total quantity sold for each product line?

SELECT 
    Product_line, SUM(quantity) AS Total_quantity
FROM
    sales
GROUP BY product_line
ORDER BY Total_quantity;


-- Q6: What is the most common payment method?

SELECT 
    payment, COUNT(payment) AS common_payment
FROM
    sales
GROUP BY payment
ORDER BY common_payment DESC
LIMIT 1;


-- Q7:  What is the average gross income for each product line?

SELECT 
    product_line, AVG(gross_income) AS Avg_gross_income
FROM
    sales
GROUP BY product_line
ORDER BY Avg_gross_income DESC;

-- Q8: Which product line has the highest average rating?

SELECT 
    product_line, AVG(rating) AS Avg_rating
FROM
    sales
GROUP BY product_line
ORDER BY Avg_rating DESC;


--------- Sales Analysis ---------

-- Q9: What is the total revenue by month?*

SELECT 
    month_name, SUM(total) AS monthly_sales
FROM
    sales
GROUP BY month_name
ORDER BY monthly_sales DESC;

-- Q10: Which city has the highest revenue?

SELECT 
    city, SUM(total) AS Revenue
FROM
    sales
GROUP BY city
ORDER BY Revenue DESC;

-- Q11: What are the peak sales time of day day? *

SELECT 
    time_of_day, SUM(total) AS TotalSales
FROM
    sales
GROUP BY time_of_day
ORDER BY TotalSales DESC;

-- Q12: Which branch generates the highest gross income?

SELECT 
    branch, MAX(gross_income) AS Max_gross_income
FROM
    sales
GROUP BY branch
ORDER BY Max_gross_income DESC;

-- Q13: How many transactions occurred in each city?

SELECT 
    city, COUNT(*) AS Total_transactions
FROM
    sales
GROUP BY city
ORDER BY total_transactions DESC

-- Q14: Identify the customer type that generates the highest revenue.

SELECT 
    customer_type, SUM(total) AS TotalSales
FROM
    sales
GROUP BY customer_type
ORDER BY TotalSales DESC
LIMIT 1;


--------- Customer Analysis --------- 


-- Q15: Which is the most common customer type?

select customer_type, count(customer_type) as count_of_common_type from sales
group by customer_type
order by count_of_common_type desc
limit 1;


-- Q16: What is the gender distribution of transactions?

SELECT 
    gender, COUNT(*) Transaction_count
FROM
    sales
GROUP BY gender
ORDER BY Transaction_count DESC;

-- Q17: What is the spending behavior of Members vs Normal customers?

SELECT 
    customer_type,
    SUM(total) AS TotalSpending,
    AVG(total) AS AvgSpending
FROM
    sales
GROUP BY customer_type;

-- Q18: Which payment method is most popular for each customer type?

SELECT 
    customer_type, payment, COUNT(payment) AS payment_count
FROM
    sales
GROUP BY customer_type , payment
ORDER BY customer_type , payment_count DESC
;

-- Q19: What is the gender distribution for each product line?

SELECT 
    gender, product_line, COUNT(*) AS count
FROM
    sales
GROUP BY gender , product_line
ORDER BY gender , product_line;

-- Q20: What are the average ratings provided by customers for each product line?

select product_line, avg(rating) as Avg_rating from sales
group by product_line
order by Avg_rating desc;
